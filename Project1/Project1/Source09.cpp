//#include <iostream>
//#include <string>
//using namespace std;
//
////while문을 이용한 연습 문제
////1. 소수 구하기
////임의의 숫자를 입력받거나, 숫자를 전달해서 해당 숫자가
////소수인지를 확인하거나 또는 해당 숫자까지의 모든 소수를
////출력하는 문제
//
////2. 이분 탐색(binary search)
////오름차순으로 정렬된 배열에서 특정한 값의 위치를 찾는 알고리즘
////중간 값을 통해 찾고자 하는 값의 크기 비교를 통해 탐색을 진행한다.
//
//int main()
//{
//	//소수(prime number)를 구하는 방법
//	// 소수는 1과 자기 자신만을 약수로 가지는 수입니다.
//	// 짝수는 소수가 될 수 없습니다.(단 2는 제외)
//	// 약수는 대칭적이다.(제곱근을 기준으로 제곱근 이전에 약수가 존재한다면
//	// 이후에도 약수가 존재하게 된다.)
//	//while true 풀이
//	int number; //입력할 숫자	
//	while (true)
//	{
//		int count = 2; //약수의 개수(소수의 경우 약수의 개수는 2)
//					   //반복을 진행하면서 count를 리셋(이래야 판단이 가능)
//		cout << "숫자를 입력해주세요 >> ";
//		cin >> number;
//		//소수 조건을 위한 조건문 설계(1보다 큰 양의 정수)
//		if (number < 2)
//		{
//			cout << "1보다 큰 양의 정수만 입력해주세요 !" << endl;
//			continue; //건너뜀(아래의 if문에 의해 소수인지 아닌지 출력하는 코드를 생략하기 위해 사용)
//			//continue는 반복문 안에서 반복을 멈추고 다음 반복으로 넘어가는 코드입니다.
//		}
//		//for문을 통해 내부 구현(제한된 횟수를 반복하는 코드에서는 while보다는 for문이 효과적)
//		//int i가 2인 이유는 소수의 가장 첫번째 값은 2이기 때문입니다.
//		for (int i = 2; i < number; i++)
//		{
//			//number가 i로 정확히 나눠진다면
//			if (number % i == 0)
//			{
//				count++; //약수의 개수 증가
//			}
//		}
//		if (count == 2)
//		{
//			cout  << number << "은(는) 소수입니다." << endl;
//			cout << "약수의 개수 " << count << "개" << endl; //약수의 개수가 2개라는 건 1과 자기 자신이라는 이야기
//		}
//		else
//		{
//			cout << number << "은(는) 소수가 아닙니다" << endl;
//			cout << "약수의 개수 " << count << "개" << endl;
//		}
//	}
//
//
//
//	return 0;
//}