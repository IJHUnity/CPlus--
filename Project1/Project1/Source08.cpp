//#include <iostream>
//#include <string>
//using namespace std;
//
////반복문 while
////특정 조건을 만족하는 동안 계속 명령을 반복하게 하는 문법입니다.
////for문이 특정 횟수에 대한 반복이라면 while은 상황에 따른 반복을
////구현할 때 효과적입니다.
//int main()
//{
//	//1) 특정 횟수만큼 반복
//	int count;
//	cout << "출력을 진행할 횟수를 입력해주세요 >> ";
//	cin >> count;
//	cin.ignore(); //입력이 끝난 이후 ignore()를 통해 무시합니다.(enter에 대한 처리)
//			      //입력에 대한 버퍼를 비우는 기능(실제로는 글자를 지우는 개념)
//	string ment;
//	cout << "출력할 내용을 입력해주세요 >>";
//	getline(cin, ment); //enter 전까지의 입력을 받을 수 있습니다.(띄어쓰기 포함)
//						//이 기능을 사용하기 위해선 <string> 헤더 파일을 include해야 합니다.
//	//위에서 입력을 받은 상태에서 enter를 친 다음 getline에 의해 읽히는 문제가 발생
//
//	while (count != 0) //count가 0이 아닌 동안 반복
//	{
//		cout << ment << endl; //반복적으로 진행할 명령문을 작성합니다.
//
//		count--; //count의 값을 변경해서 위의 조건을 탈출합니다.
//				 //이런 코드들이 없을 경우 while을 탈출할 수 없으며 무한 루프가 발생합니다.
//	}
//
//	//2) while true : 조건식을 true로 적음으로써 무한 루프를 실행합니다.
//	//				  의도적인 경우에만 사용하며, 중단을 시키고 싶을 경우에는 while문 내부에서 중단 시킬 기능을 따로 작성합니다.
//	int value = 0;
//	while (true)
//	{
//		value++;
//		cout << value << " ";
//
//		if (value == 100)
//		{
//			break; //반복하고 있는 코드에서 작업을 중단하는 명령어 break
//		}
//	}
//
//	//3) do - while : 1회를 무조건 실행하고 그 이후부터 조건에 따라 반복하는 방식
//	//				  while문의 특성 상 조건이 먼저 적혀 코드 설계 시 어색한 부분을 해결할 때 사용합니다.
//	
//
//
//	int num; //변수 num을 선언합니다.
//	do
//	{
//		cout << "숫자를 입력해주세요. 0을 입력하면 종료됩니다 >> ";
//		cin >> num; //num에 대한 입력을 진행합니다.
//	} while (num != 0);//num이 0이 아닐 동안 반복합니다.
//
//	//무조건 1회의 실행을 보장 받기 때문에 이런 상황이 필요한 경우에만 사용합니다.
//
//	//사용자는 상황에 따라 일반적인 while문, while true문, do while문을 적절하게
//	//골라 사용할 수 있어야 합니다.
//
//	return 0;
//}